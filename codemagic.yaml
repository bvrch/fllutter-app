workflows:
    native-android:
        name: Native Android
        instance_type: mac_mini
        max_build_duration: 60
        environment:
            node: latest
            xcode: 12.2
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: '*'
                  include: true
                  source: true
        scripts:
          - name: Set up local.properties
            script: |
              echo "flutter.sdk=$FLUTTER_ROOT" > "$CM_BUILD_DIR/android/local.properties"
          - name: Set Android SDK location
            script: |
              echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
          - name: Chech local.properties files
            script: |
              cat $CM_BUILD_DIR/android/local.properties
              cat $CM_BUILD_DIR/local.properties
          - name: Flutter analyze
            script: |
                flutter analyze
          - name: Flutter Unit test
            script: |
              flutter test
          # - name: Set up keystore
          #   script: |
          #         echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          #         # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
          #         # cat >> "$FCI_BUILD_DIR/key.properties" <<EOF
          #         # storePassword=$CM_KEYSTORE_PASSWORD
          #         # keyPassword=$CM_KEY_ALIAS_PASSWORD
          #         # keyAlias=$CM_KEY_ALIAS_USERNAME
          #         # storeFile=/tmp/keystore.keystore
          #         # EOF
          - name: Build Android APK
            script: |
              flutter build apk --debug
          # - name: Build Android test APK
          #   script: |
          #     flutter test 
          # - name: Build Android production release
          #   script: |
          #     flutter build apk --release
        artifacts:
            - app/build/outputs/**/*.apk
            - flutter_drive.log
        publishing:
            email:
                recipients:
                    - nikbarch@gmail.com
                notify:
                  success: true
                  failure: false   
            google_play: 
              credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS # Contents of the JSON key file for Google Play service account saved as a secure environment variable
              track: alpha # Name of the track internal, alpha, beta, production, internal app sharing, or your custom track name
              in_app_update_priority: 3 #0-5
              rollout_fraction: 0.25 
              changes_not_sent_for_review: false
              submit_as_draft: true 
    
    native-ios:
        name: Native iOS
        instance_type: mac_mini
        max_build_duration: 60
        environment:
            node: latest
            xcode: 12.2
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: '*'
                  include: true
                  source: true
        scripts:
            # - name: Pod install
            #   script: |
            #     find . -name "Podfile" -execdir pod install \;
            # - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
            #   script: |
            #     keychain initialize
            # - name: Fetch signing files
            #   script: |
            #     app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Build without signing
              script: |
                flutter build ios --debug --no-codesign
        artifacts: 
          - build/ios/ipa/*.ipa
          - /tmp/xcodebuild_logs/*.log
          - flutter_drive.log
          # - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
            # scripts:
            #   - name: Crashlytics
            #     script: |
            #       echo "Find build artifacts"
            #       dsymPath=$(find $CM_BUILD_DIR/build/ios/archive/Runner.xcarchive -name "*.dSYM" | head -1)
            #       if [[ -z ${dsymPath} ]]
            #       then
            #         echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
            #       else
            #         echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
            #         ls -d -- ios/Pods/*
            #         $CM_BUILD_DIR/ios/Pods/FirebaseCrashlytics/upload-symbols -gsp ios/Runner/GoogleService-Info.plist -p ios $dsymPath
            #       fi
            email:
                recipients:
                    - nikbarch@gmail.com
                notify:
                  success: true
                  failure: false 
    #         app_store_connect: # For iOS or macOS app
    # # For authenticating with App Store Connect and uploading the IPA to App Store Connect (required)
    #           api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key saved as a secure environment variable
    #           key_id: 3MD9688D9K # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
    #           issuer_id: 21d78e2f-b8ad-... # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
    
    # # Configuration related to TestFlight (optional)
    #           submit_to_testflight: true # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight beta review. Required for distributing to beta groups. Note: This action is performed during post-processing.
    #           beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
    #             - group name 1
    #             - group name 2
    
    # # Configuration related to App Store (optional)
    #           submit_to_app_store: true # Optional boolean, defaults to false. Whether or not to submit the uploaded build to App Store review. Note: This action is performed during post-processing.
    #           release_type: SCHEDULED # Optional, defaults to MANUAL. Supported values: MANUAL, AFTER_APPROVAL or SCHEDULED
    #           earliest_release_date: 2021-12-01T14:00:00+00:00 # Optional. Timezone-aware ISO8601 timestamp with hour precision when scheduling the release. This can be only used when release type is set to SCHEDULED. It cannot be set to a date in the past.
    #           copyright: 2021 Nevercode Ltd #  

    web:
        name: Flutter Web
        instance_type: mac_mini
        max_build_duration: 60
        environment:
            node: latest
            xcode: 12.2
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: '*'
                  include: true
                  source: true
        scripts:
            - name: Build Web
              script: |
                flutter config --enable-web
                flutter build web --release
                cd build/web
                7z a -r ../web.zip ./*  